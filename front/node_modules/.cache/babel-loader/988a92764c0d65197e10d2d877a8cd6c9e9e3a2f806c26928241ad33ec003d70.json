{"ast":null,"code":"// В форме убираем role, если backend не поддерживает:\n\nasync function handleSubmit(e) {\n  e.preventDefault();\n  if (!email || !pass) {\n    setError('Error: Please check your inputs.');\n    setSuccess('');\n    return;\n  }\n  setError('');\n  try {\n    const res = await fetch('http://localhost:8080/api/auth/register', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        email,\n        password: pass\n      }) // без role\n    });\n    const data = await res.json();\n    if (res.ok) {\n      setSuccess('Success: Registration complete!');\n      setError('');\n      setEmail('');\n      setPass('');\n      setTimeout(() => navigate('/login'), 1500);\n    } else {\n      setError(data.error || 'Registration failed');\n      setSuccess('');\n    }\n  } catch (err) {\n    setError('Network error');\n    setSuccess('');\n  }\n}","map":{"version":3,"names":["handleSubmit","e","preventDefault","email","pass","setError","setSuccess","res","fetch","method","headers","body","JSON","stringify","password","data","json","ok","setEmail","setPass","setTimeout","navigate","error","err"],"sources":["/home/Polina/sber_hack/sber_hack/front/src/pages/Register.js"],"sourcesContent":["// В форме убираем role, если backend не поддерживает:\n\nasync function handleSubmit(e) {\n  e.preventDefault();\n  if (!email || !pass) {\n    setError('Error: Please check your inputs.');\n    setSuccess('');\n    return;\n  }\n  setError('');\n  try {\n    const res = await fetch('http://localhost:8080/api/auth/register', {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({ email, password: pass }), // без role\n    });\n    const data = await res.json();\n    if (res.ok) {\n      setSuccess('Success: Registration complete!');\n      setError('');\n      setEmail('');\n      setPass('');\n      setTimeout(() => navigate('/login'), 1500);\n    } else {\n      setError(data.error || 'Registration failed');\n      setSuccess('');\n    }\n  } catch (err) {\n    setError('Network error');\n    setSuccess('');\n  }\n}\n"],"mappings":"AAAA;;AAEA,eAAeA,YAAYA,CAACC,CAAC,EAAE;EAC7BA,CAAC,CAACC,cAAc,CAAC,CAAC;EAClB,IAAI,CAACC,KAAK,IAAI,CAACC,IAAI,EAAE;IACnBC,QAAQ,CAAC,kCAAkC,CAAC;IAC5CC,UAAU,CAAC,EAAE,CAAC;IACd;EACF;EACAD,QAAQ,CAAC,EAAE,CAAC;EACZ,IAAI;IACF,MAAME,GAAG,GAAG,MAAMC,KAAK,CAAC,yCAAyC,EAAE;MACjEC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QAAE,cAAc,EAAE;MAAmB,CAAC;MAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAEV,KAAK;QAAEW,QAAQ,EAAEV;MAAK,CAAC,CAAC,CAAE;IACnD,CAAC,CAAC;IACF,MAAMW,IAAI,GAAG,MAAMR,GAAG,CAACS,IAAI,CAAC,CAAC;IAC7B,IAAIT,GAAG,CAACU,EAAE,EAAE;MACVX,UAAU,CAAC,iCAAiC,CAAC;MAC7CD,QAAQ,CAAC,EAAE,CAAC;MACZa,QAAQ,CAAC,EAAE,CAAC;MACZC,OAAO,CAAC,EAAE,CAAC;MACXC,UAAU,CAAC,MAAMC,QAAQ,CAAC,QAAQ,CAAC,EAAE,IAAI,CAAC;IAC5C,CAAC,MAAM;MACLhB,QAAQ,CAACU,IAAI,CAACO,KAAK,IAAI,qBAAqB,CAAC;MAC7ChB,UAAU,CAAC,EAAE,CAAC;IAChB;EACF,CAAC,CAAC,OAAOiB,GAAG,EAAE;IACZlB,QAAQ,CAAC,eAAe,CAAC;IACzBC,UAAU,CAAC,EAAE,CAAC;EAChB;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}