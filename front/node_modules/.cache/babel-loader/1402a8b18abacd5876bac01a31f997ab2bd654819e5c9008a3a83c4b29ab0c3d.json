{"ast":null,"code":"var _jsxFileName = \"/home/Polina/sber_hack/sber_hack/front/src/pages/Login.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport '../App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Login() {\n  _s();\n  const [email, setEmail] = useState('');\n  const [pass, setPass] = useState('');\n  const [error, setError] = useState('');\n  const navigate = useNavigate();\n  function handleSubmit(e) {\n    e.preventDefault();\n    if (!email || !pass) {\n      setError('Incorrect email or password. Please try again.');\n    } else {\n      setError('');\n      // handle successful login here\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dark-bg\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card card-dark\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Login to CleanWebApp\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"input\",\n          type: \"email\",\n          placeholder: \"Enter your email\",\n          value: email,\n          onChange: e => setEmail(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"input\",\n          type: \"password\",\n          placeholder: \"Enter your password\",\n          value: pass,\n          onChange: e => setPass(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button\",\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button\",\n        style: {\n          marginTop: '1em',\n          background: \"#347cff\",\n          color: \"#fff\"\n        },\n        onClick: () => navigate('/register'),\n        children: \"Go to Registration\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n}\n_s(Login, \"PMox6Ei5WBm3CV81SzSjC73tOF4=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useNavigate","jsxDEV","_jsxDEV","Login","_s","email","setEmail","pass","setPass","error","setError","navigate","handleSubmit","e","preventDefault","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","value","onChange","target","style","marginTop","background","color","onClick","_c","$RefreshReg$"],"sources":["/home/Polina/sber_hack/sber_hack/front/src/pages/Login.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport '../App.css';\n\nfunction Login() {\n  const [email, setEmail] = useState('');\n  const [pass, setPass] = useState('');\n  const [error, setError] = useState('');\n  const navigate = useNavigate();\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    if (!email || !pass) {\n      setError('Incorrect email or password. Please try again.');\n    } else {\n      setError('');\n      // handle successful login here\n    }\n  }\n\n  return (\n    <div className=\"dark-bg\">\n      <div className=\"card card-dark\">\n        <h2>Login to CleanWebApp</h2>\n        <form onSubmit={handleSubmit}>\n          <label>Email</label>\n          <input className=\"input\"\n                 type=\"email\"\n                 placeholder=\"Enter your email\"\n                 value={email}\n                 onChange={e => setEmail(e.target.value)} />\n          <label>Password</label>\n          <input className=\"input\"\n                 type=\"password\"\n                 placeholder=\"Enter your password\"\n                 value={pass}\n                 onChange={e => setPass(e.target.value)} />\n          {error && <div className=\"error\">{error}</div>}\n          <button className=\"button\">Login</button>\n        </form>\n        <button\n          className=\"button\"\n          style={{ marginTop: '1em', background: \"#347cff\", color: \"#fff\" }}\n          onClick={() => navigate('/register')}>\n            Go to Registration\n        </button>\n      </div>\n    </div>\n  );\n}\nexport default Login;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAO,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpB,SAASC,KAAKA,CAAA,EAAG;EAAAC,EAAA;EACf,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACQ,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACU,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAMY,QAAQ,GAAGX,WAAW,CAAC,CAAC;EAE9B,SAASY,YAAYA,CAACC,CAAC,EAAE;IACvBA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,IAAI,CAACT,KAAK,IAAI,CAACE,IAAI,EAAE;MACnBG,QAAQ,CAAC,gDAAgD,CAAC;IAC5D,CAAC,MAAM;MACLA,QAAQ,CAAC,EAAE,CAAC;MACZ;IACF;EACF;EAEA,oBACER,OAAA;IAAKa,SAAS,EAAC,SAAS;IAAAC,QAAA,eACtBd,OAAA;MAAKa,SAAS,EAAC,gBAAgB;MAAAC,QAAA,gBAC7Bd,OAAA;QAAAc,QAAA,EAAI;MAAoB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC7BlB,OAAA;QAAMmB,QAAQ,EAAET,YAAa;QAAAI,QAAA,gBAC3Bd,OAAA;UAAAc,QAAA,EAAO;QAAK;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eACpBlB,OAAA;UAAOa,SAAS,EAAC,OAAO;UACjBO,IAAI,EAAC,OAAO;UACZC,WAAW,EAAC,kBAAkB;UAC9BC,KAAK,EAAEnB,KAAM;UACboB,QAAQ,EAAEZ,CAAC,IAAIP,QAAQ,CAACO,CAAC,CAACa,MAAM,CAACF,KAAK;QAAE;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eAClDlB,OAAA;UAAAc,QAAA,EAAO;QAAQ;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eACvBlB,OAAA;UAAOa,SAAS,EAAC,OAAO;UACjBO,IAAI,EAAC,UAAU;UACfC,WAAW,EAAC,qBAAqB;UACjCC,KAAK,EAAEjB,IAAK;UACZkB,QAAQ,EAAEZ,CAAC,IAAIL,OAAO,CAACK,CAAC,CAACa,MAAM,CAACF,KAAK;QAAE;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,EAChDX,KAAK,iBAAIP,OAAA;UAAKa,SAAS,EAAC,OAAO;UAAAC,QAAA,EAAEP;QAAK;UAAAQ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,eAC9ClB,OAAA;UAAQa,SAAS,EAAC,QAAQ;UAAAC,QAAA,EAAC;QAAK;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACrC,CAAC,eACPlB,OAAA;QACEa,SAAS,EAAC,QAAQ;QAClBY,KAAK,EAAE;UAAEC,SAAS,EAAE,KAAK;UAAEC,UAAU,EAAE,SAAS;UAAEC,KAAK,EAAE;QAAO,CAAE;QAClEC,OAAO,EAAEA,CAAA,KAAMpB,QAAQ,CAAC,WAAW,CAAE;QAAAK,QAAA,EAAC;MAExC;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAAChB,EAAA,CA7CQD,KAAK;EAAA,QAIKH,WAAW;AAAA;AAAAgC,EAAA,GAJrB7B,KAAK;AA8Cd,eAAeA,KAAK;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}