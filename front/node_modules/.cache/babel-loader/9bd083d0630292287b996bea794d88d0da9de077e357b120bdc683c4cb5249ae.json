{"ast":null,"code":"var _jsxFileName = \"/home/Polina/sber_hack/sber_hack/front/src/components/Profile/Profile.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Profile() {\n  _s();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    // Замените URL на ваш реальный backend-API для получения данных пользователя\n    fetch('http://localhost:8080/api/profile', {\n      credentials: 'include' // если нужна cookie/JWT\n    }).then(res => res.json()).then(data => {\n      setUser(data);\n      setLoading(false);\n    }).catch(() => {\n      setUser(null);\n      setLoading(false);\n    });\n  }, []);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u043A\\u0430 \\u043F\\u0440\\u043E\\u0444\\u0438\\u043B\\u044F\\u2026\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 12\n    }, this);\n  }\n  if (!user) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"\\u041E\\u0448\\u0438\\u0431\\u043A\\u0430 \\u0437\\u0430\\u0433\\u0440\\u0443\\u0437\\u043A\\u0438 \\u0434\\u0430\\u043D\\u043D\\u044B\\u0445 \\u043F\\u0440\\u043E\\u0444\\u0438\\u043B\\u044F.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 12\n    }, this);\n  }\n\n  // Проверяем поля на наличие, иначе выводим \"не указано\"\n  const renderField = (label, value) => /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n      children: [label, \":\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), \" \", value ? value : 'не указано']\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"profile-card\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\u041F\\u0440\\u043E\\u0444\\u0438\\u043B\\u044C \\u043F\\u043E\\u043B\\u044C\\u0437\\u043E\\u0432\\u0430\\u0442\\u0435\\u043B\\u044F\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), renderField('Email', user.email), renderField('Имя', user.name), renderField('Фамилия', user.surname), renderField('Телефон', user.phone)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n_s(Profile, \"NiO5z6JIqzX62LS5UWDgIqbZYyY=\");\n_c = Profile;\nvar _c;\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","Profile","_s","user","setUser","loading","setLoading","fetch","credentials","then","res","json","data","catch","children","fileName","_jsxFileName","lineNumber","columnNumber","renderField","label","value","className","email","name","surname","phone","_c","$RefreshReg$"],"sources":["/home/Polina/sber_hack/sber_hack/front/src/components/Profile/Profile.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\n\nexport default function Profile() {\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    // Замените URL на ваш реальный backend-API для получения данных пользователя\n    fetch('http://localhost:8080/api/profile', {\n      credentials: 'include', // если нужна cookie/JWT\n    })\n      .then((res) => res.json())\n      .then((data) => {\n        setUser(data);\n        setLoading(false);\n      })\n      .catch(() => {\n        setUser(null);\n        setLoading(false);\n      });\n  }, []);\n\n  if (loading) {\n    return <div>Загрузка профиля…</div>;\n  }\n\n  if (!user) {\n    return <div>Ошибка загрузки данных профиля.</div>;\n  }\n\n  // Проверяем поля на наличие, иначе выводим \"не указано\"\n  const renderField = (label, value) =>\n    <div>\n      <strong>{label}:</strong> {value ? value : 'не указано'}\n    </div>;\n\n  return (\n    <div className=\"profile-card\">\n      <h2>Профиль пользователя</h2>\n      {renderField('Email', user.email)}\n      {renderField('Имя', user.name)}\n      {renderField('Фамилия', user.surname)}\n      {renderField('Телефон', user.phone)}\n      {/* Добавьте остальные поля по необходимости */}\n    </div>\n  );\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,eAAe,SAASC,OAAOA,CAAA,EAAG;EAAAC,EAAA;EAChC,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGN,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACO,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAE5CD,SAAS,CAAC,MAAM;IACd;IACAU,KAAK,CAAC,mCAAmC,EAAE;MACzCC,WAAW,EAAE,SAAS,CAAE;IAC1B,CAAC,CAAC,CACCC,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACzBF,IAAI,CAAEG,IAAI,IAAK;MACdR,OAAO,CAACQ,IAAI,CAAC;MACbN,UAAU,CAAC,KAAK,CAAC;IACnB,CAAC,CAAC,CACDO,KAAK,CAAC,MAAM;MACXT,OAAO,CAAC,IAAI,CAAC;MACbE,UAAU,CAAC,KAAK,CAAC;IACnB,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EAEN,IAAID,OAAO,EAAE;IACX,oBAAOL,OAAA;MAAAc,QAAA,EAAK;IAAiB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EACrC;EAEA,IAAI,CAACf,IAAI,EAAE;IACT,oBAAOH,OAAA;MAAAc,QAAA,EAAK;IAA+B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EACnD;;EAEA;EACA,MAAMC,WAAW,GAAGA,CAACC,KAAK,EAAEC,KAAK,kBAC/BrB,OAAA;IAAAc,QAAA,gBACEd,OAAA;MAAAc,QAAA,GAASM,KAAK,EAAC,GAAC;IAAA;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,KAAC,EAACG,KAAK,GAAGA,KAAK,GAAG,YAAY;EAAA;IAAAN,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACpD,CAAC;EAER,oBACElB,OAAA;IAAKsB,SAAS,EAAC,cAAc;IAAAR,QAAA,gBAC3Bd,OAAA;MAAAc,QAAA,EAAI;IAAoB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAC5BC,WAAW,CAAC,OAAO,EAAEhB,IAAI,CAACoB,KAAK,CAAC,EAChCJ,WAAW,CAAC,KAAK,EAAEhB,IAAI,CAACqB,IAAI,CAAC,EAC7BL,WAAW,CAAC,SAAS,EAAEhB,IAAI,CAACsB,OAAO,CAAC,EACpCN,WAAW,CAAC,SAAS,EAAEhB,IAAI,CAACuB,KAAK,CAAC;EAAA;IAAAX,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEhC,CAAC;AAEV;AAAChB,EAAA,CA5CuBD,OAAO;AAAA0B,EAAA,GAAP1B,OAAO;AAAA,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}